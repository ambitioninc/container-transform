{ 				  "id": "3tier",			  "apps": [    {        "acceptedResourceRoles": [],        "container": {            "docker": {                "forcePullImage": true,                "image": "indiehosters/nextcloud",                "network": "BRIDGE",                "parameters": [                    {                        "key": "net",                        "value": "proxy-tier"                    }                ]            },            "type": "DOCKER",            "volumes": [                {                    "containerPath": "/var/www/html/apps",                    "hostPath": "./nextcloud/apps",                    "mode": "RW"                },                {                    "containerPath": "/var/www/html/config",                    "hostPath": "./nextcloud/config",                    "mode": "RW"                },                {                    "containerPath": "/var/www/html/data",                    "hostPath": "./nextcloud/data",                    "mode": "RW"                }            ]        },        "dependencies": [            "/db"        ],        "fetch": [],        "id": "app"    },    {        "acceptedResourceRoles": [],        "container": {            "docker": {                "forcePullImage": true,                "image": "mariadb",                "network": "BRIDGE",                "parameters": [                    {                        "key": "net",                        "value": "proxy-tier"                    }                ]            },            "type": "DOCKER",            "volumes": [                {                    "containerPath": "/var/lib/mysql",                    "hostPath": "./nextcloud/db",                    "mode": "RW"                }            ]        },        "env": {            "MYSQL_DATABASE": "nextcloud",            "MYSQL_PASSWORD": "${MYSQL_USER_PW}",            "MYSQL_ROOT_PASSWORD": "${MYSQL_ROOT_PW}",            "MYSQL_USER": "nextcloud"        },        "fetch": [],        "id": "db"    },    {        "acceptedResourceRoles": [],        "container": {            "docker": {                "forcePullImage": true,                "image": "alastaircoote/docker-letsencrypt-nginx-proxy-companion",                "network": "BRIDGE",                "parameters": [                    {                        "key": "volumes-from",                        "value": "proxy"                    }                ]            },            "type": "DOCKER",            "volumes": [                {                    "containerPath": "/var/run/docker.sock",                    "hostPath": "/var/run/docker.sock",                    "mode": "RO"                }            ]        },        "env": {            "LETSENCRYPT_TEST": "TRUE"        },        "fetch": [],        "id": "letsencrypt-companion"    },    {        "acceptedResourceRoles": [],        "container": {            "docker": {                "forcePullImage": true,                "image": "jwilder/nginx-proxy",                "network": "BRIDGE",                "parameters": [                    {                        "key": "net",                        "value": "proxy-tier"                    }                ],                "portMappings": [                    {                        "containerPort": 80,                        "hostPort": 80,                        "protocol": "tcp"                    },                    {                        "containerPort": 443,                        "hostPort": 443,                        "protocol": "tcp"                    }                ]            },            "type": "DOCKER",            "volumes": [                {                    "containerPath": "/etc/nginx/conf.d",                    "hostPath": "./proxy/conf.d",                    "mode": "RW"                },                {                    "containerPath": "/etc/nginx/vhost.d",                    "hostPath": "./proxy/vhost.d",                    "mode": "RW"                },                {                    "containerPath": "/usr/share/nginx/html",                    "hostPath": "./proxy/html",                    "mode": "RW"                },                {                    "containerPath": "/etc/nginx/certs",                    "hostPath": "./proxy/certs",                    "mode": "RO"                },                {                    "containerPath": "/tmp/docker.sock",                    "hostPath": "/var/run/docker.sock",                    "mode": "RO"                }            ]        },        "fetch": [],        "id": "proxy",        "requirePorts": true    },    {        "acceptedResourceRoles": [],        "container": {            "docker": {                "forcePullImage": true,                "image": "redis",                "network": "BRIDGE",                "parameters": [                    {                        "key": "net",                        "value": "proxy-tier"                    }                ]            },            "type": "DOCKER"        },        "fetch": [],        "id": "redis"    },    {        "acceptedResourceRoles": [],        "container": {            "docker": {                "forcePullImage": true,                "image": "nginx",                "network": "BRIDGE",                "parameters": [                    {                        "key": "net",                        "value": "proxy-tier"                    },                    {                        "key": "volumes-from",                        "value": "app"                    }                ]            },            "type": "DOCKER",            "volumes": [                {                    "containerPath": "/etc/nginx/nginx.conf",                    "hostPath": "./nginx.conf",                    "mode": "RO"                }            ]        },        "dependencies": [            "/app"        ],        "env": {            "LETSENCRYPT_EMAIL": "${EMAIL}",            "LETSENCRYPT_HOST": "${DOMAIN}",            "VIRTUAL_HOST": "${DOMAIN}",            "VIRTUAL_NETWORK": "nginx-proxy",            "VIRTUAL_PORT": "80"        },        "fetch": [],        "id": "web"    }]	  }
